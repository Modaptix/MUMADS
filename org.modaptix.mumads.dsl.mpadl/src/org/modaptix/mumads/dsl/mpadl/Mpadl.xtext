grammar org.modaptix.mumads.dsl.mpadl.Mpadl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate mpadl "http://www.modaptix.org/mumads/dsl/mpadl/Mpadl"

Mpadl:
	'architecture' name=STRING '{'
	
		'registers' '{'
			registers+=(RegisterPhysical | RegisterMmap)+
		'}'
		
		'addressing_modes' '{' 
			addressingModes+=AddressingMode+
		'}'
		
		'interrupt_type'
			interruptType=INTERRUPT_TYPE
			
		'interrupt_modes' '{'
			interruptModes+=InterruptMode+
		'}'
		
		'instruction_set' '{'
			instructionSet+=(Instruction)+
		'}'
	'}'
;

enum OPERAND_TYPE: IMMEDIATE='i' | ADDRESS='a' | RELATIVE_ADDRESS='r' | NUMERIC_CONSTANT='c';

enum INTERRUPT_TYPE: REAL='real' | WAIT='simulated';

terminal HEX returns ecore::EInt: '0x' ('a'..'f'|'A'..'F'|'0'..'9')+;

terminal TRANSLATES_TO: '->';

terminal MATH_SYMBOL: '+' | '-' | '*' | '/';

Register:
	RegisterPhysical | RegisterMmap
;

RegisterPhysical:
	'physical'
	name=ID
	('[' index=[RegisterPhysical] ']')?
	'(' size=INT ')'	
;

RegisterMmap:
	'mmap'
	name=ID
	('[' index=[RegisterMmap] ']')?
	'(' size=INT ')'	
	address=HEX	
;

AddressingMode:
	name=ID
;

InterruptMode:
	name=ID
;

Instruction:
	(SimpleInstruction | ComplexInstruction) ';'
;

SimpleInstruction:
	name=ID TRANSLATES_TO opcodes+=Opcode+
;

Opcode:
	LiteralValue | OperandReference | Expression
;

LiteralValue:
	value=(HEX | INT)
;

OperandReference:
	'[' operand=INT ']'
;

Expression:
	'(' lhs=Opcode operation=MATH_SYMBOL rhs=Opcode  ')'
;

ComplexInstruction:
	name=ID
	variants+=InstructionVariant (',' variants+=InstructionVariant)*
;

InstructionVariant:
	operands+=Operand (',' operands+=Operand)* TRANSLATES_TO opcodes+=Opcode+
;

Operand:
	name=OPERAND_TYPE ('(' width=INT ')')?
;