grammar org.modaptix.mumads.dsl.asm.Asm 

with org.modaptix.xtext.expressions.ArithmeticExpression

hidden(SL_COMMENT) 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.modaptix.org/xtext/expressions/ArithmeticExpression" as arithmeticExpression
import "http://www.modaptix.org/mumads/dsl/mpadl/Mpadl" as mpadl

generate asm "http://www.modaptix.org/mumads/dsl/asm/Asm"


Asm:
	(WS* EOL)*
	(imports+=Import (WS* EOL)+)?
	(code+=Instruction (WS* EOL)+)+ 
;

Import:
	'#'? ('import'|'include') WS* importURI=STRING
;

Instruction returns mpadl::Instruction:
	ArchInstructionOrMacro | ConcreteInstruction | PseudoInstruction
;

ConcreteInstruction returns mpadl::ConcreteInstruction:
	MacroDefinition //| ArchInstructionOrMacro
;

MacroDefinition:
	name=ID WS ('MACRO'|'macro') (WS* EOL)+
	(code+=Instruction (WS* EOL)+)+
	WS ('ENDM'|'endm')
;

PseudoInstruction returns mpadl::PseudoInstruction:
	PseudoInstructionEqu | PseudoInstructionOrg | PseudoInstructionDs
;

PseudoInstructionEqu:
	name=ID WS ('equ'|'EQU') WS value = IntegerExpression
;

PseudoInstructionOrg:
	WS ('org'|'ORG') WS address = IntegerExpression
;

PseudoInstructionDs:
	name=ID WS ('ds'|'DS') ('.' variant=ID)? WS value = IntegerExpression
;

ArchInstructionOrMacro:
	(name=ID)? WS mnemonic=[mpadl::ConcreteInstruction] (WS operands+=Operand (COMMA operands+=Operand)* )?	
;

Operand:
	immediate ?= '#'?
	value = IntegerExpression
;

IntegerLiteralOrReference returns arithmeticExpression::IntegerExpression:
	IntegerLiteral | NamedReference
;

NamedReference:
	target=[mpadl::NamedEntity|RegisterID]	//NamedReferenceName
;

RegisterID returns ecore::EString:
	ID ( '[' ID ']' )?
;

terminal EOL: ('\r'? '\n')+;
terminal WS: (' '|'\t')+;
terminal COMMA: (',' WS?);
terminal ID: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

terminal SL_COMMENT 	: ';' !('\n'|'\r')*;

terminal STRING	: 
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		; 
