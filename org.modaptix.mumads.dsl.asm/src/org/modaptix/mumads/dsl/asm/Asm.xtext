grammar org.modaptix.mumads.dsl.asm.Asm 

with org.modaptix.xtext.expressions.ArithmeticExpression

hidden(SL_COMMENT) 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.modaptix.org/xtext/expressions/ArithmeticExpression" as arithmeticExpression

generate asm "http://www.modaptix.org/mumads/dsl/asm/Asm"


Asm:
	(WS* EOL)*	
	(code+=Instruction (WS* EOL)+)+ 
;

Instruction:
	Import | MacroDefinition | ArchInstruction
;

Import:
	'#'? ('import'|'include') WS* importURI=ID
;

MacroDefinition:
	name=ID WS ('MACRO'|'macro') (WS* EOL)+
	(code+=Instruction (WS* EOL)+)+
	WS ('ENDM'|'endm')
;

ArchInstruction:
	(name=ID)? WS mnemonic=ID ('.' variant=ID)? (WS operands+=Operand (COMMA operands+=Operand)* )?	
;

Operand:
	immediate ?= '#'?
	value = IntegerExpression
;

IntegerLiteralOrReference returns arithmeticExpression::IntegerExpression:
	IntegerLiteral | NamedReference
;

NamedReference:
	target=NamedReferenceName
;

NamedReferenceName returns ecore::EString:
	ID ( '[' ID ']' )?
;

terminal EOL: ('\r'? '\n')+;
terminal WS: (' '|'\t')+;
terminal COMMA: (',' WS?);
terminal ID: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

terminal SL_COMMENT 	: ';' !('\n'|'\r')*;
